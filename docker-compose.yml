version: '3.8'

services:
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: mev_timescaledb
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    restart: unless-stopped

  refresh_scheduler:
    image: postgres:15-alpine
    container_name: refresh_scheduler
    depends_on:
      timescaledb:
        condition: service_healthy
    volumes:
      - ./sql:/scripts
    environment:
      - PGPASSWORD=${DB_PASSWORD}
    entrypoint: >
      /bin/sh -c " echo 'Looking for .sql files in /sql and subdirectories';  find /sql -type f -name '*.sql' -print | while read file; do
        echo \"Running $file\"; 
        psql -h timescaledb -U ${DB_USER} -d ${DB_NAME} -f \"$file\" || exit 1; 
      done"

  postgrest:
    image: postgrest/postgrest:latest
    container_name: postgrest
    depends_on:
      timescaledb:
        condition: service_healthy
    environment:
      PGRST_DB_URI: ${PGRST_DB_URI}
      PGRST_DB_SCHEMA: ${PGRST_DB_SCHEMA}
      PGRST_DB_ANON_ROLE: ${PGRST_DB_ANON_ROLE}
      PGRST_SERVER_PORT: ${PGRST_SERVER_PORT}
    ports:
      - "3003:3000"
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:3000 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    depends_on:
      timescaledb:
        condition: service_healthy
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=mev_timescaledb
      - DB_PORT=${DB_PORT}
    restart: unless-stopped

volumes:
  timescale_data:
    name: mev_timescale_data
